package com.Zeal.Shiyulin.modules.login.pojo;

import java.util.ArrayList;
import java.util.List;

public class UserPowerExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_power
     *
     * @mbggenerated Mon Oct 03 21:52:04 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_power
     *
     * @mbggenerated Mon Oct 03 21:52:04 CST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_power
     *
     * @mbggenerated Mon Oct 03 21:52:04 CST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_power
     *
     * @mbggenerated Mon Oct 03 21:52:04 CST 2016
     */
    public UserPowerExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_power
     *
     * @mbggenerated Mon Oct 03 21:52:04 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_power
     *
     * @mbggenerated Mon Oct 03 21:52:04 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_power
     *
     * @mbggenerated Mon Oct 03 21:52:04 CST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_power
     *
     * @mbggenerated Mon Oct 03 21:52:04 CST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_power
     *
     * @mbggenerated Mon Oct 03 21:52:04 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_power
     *
     * @mbggenerated Mon Oct 03 21:52:04 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_power
     *
     * @mbggenerated Mon Oct 03 21:52:04 CST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_power
     *
     * @mbggenerated Mon Oct 03 21:52:04 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_power
     *
     * @mbggenerated Mon Oct 03 21:52:04 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_power
     *
     * @mbggenerated Mon Oct 03 21:52:04 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_power
     *
     * @mbggenerated Mon Oct 03 21:52:04 CST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andUseridIsNull() {
            addCriterion("UserId is null");
            return (Criteria) this;
        }

        public Criteria andUseridIsNotNull() {
            addCriterion("UserId is not null");
            return (Criteria) this;
        }

        public Criteria andUseridEqualTo(Long value) {
            addCriterion("UserId =", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotEqualTo(Long value) {
            addCriterion("UserId <>", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridGreaterThan(Long value) {
            addCriterion("UserId >", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridGreaterThanOrEqualTo(Long value) {
            addCriterion("UserId >=", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLessThan(Long value) {
            addCriterion("UserId <", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLessThanOrEqualTo(Long value) {
            addCriterion("UserId <=", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridIn(List<Long> values) {
            addCriterion("UserId in", values, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotIn(List<Long> values) {
            addCriterion("UserId not in", values, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridBetween(Long value1, Long value2) {
            addCriterion("UserId between", value1, value2, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotBetween(Long value1, Long value2) {
            addCriterion("UserId not between", value1, value2, "userid");
            return (Criteria) this;
        }

        public Criteria andIsgagIsNull() {
            addCriterion("IsGag is null");
            return (Criteria) this;
        }

        public Criteria andIsgagIsNotNull() {
            addCriterion("IsGag is not null");
            return (Criteria) this;
        }

        public Criteria andIsgagEqualTo(Integer value) {
            addCriterion("IsGag =", value, "isgag");
            return (Criteria) this;
        }

        public Criteria andIsgagNotEqualTo(Integer value) {
            addCriterion("IsGag <>", value, "isgag");
            return (Criteria) this;
        }

        public Criteria andIsgagGreaterThan(Integer value) {
            addCriterion("IsGag >", value, "isgag");
            return (Criteria) this;
        }

        public Criteria andIsgagGreaterThanOrEqualTo(Integer value) {
            addCriterion("IsGag >=", value, "isgag");
            return (Criteria) this;
        }

        public Criteria andIsgagLessThan(Integer value) {
            addCriterion("IsGag <", value, "isgag");
            return (Criteria) this;
        }

        public Criteria andIsgagLessThanOrEqualTo(Integer value) {
            addCriterion("IsGag <=", value, "isgag");
            return (Criteria) this;
        }

        public Criteria andIsgagIn(List<Integer> values) {
            addCriterion("IsGag in", values, "isgag");
            return (Criteria) this;
        }

        public Criteria andIsgagNotIn(List<Integer> values) {
            addCriterion("IsGag not in", values, "isgag");
            return (Criteria) this;
        }

        public Criteria andIsgagBetween(Integer value1, Integer value2) {
            addCriterion("IsGag between", value1, value2, "isgag");
            return (Criteria) this;
        }

        public Criteria andIsgagNotBetween(Integer value1, Integer value2) {
            addCriterion("IsGag not between", value1, value2, "isgag");
            return (Criteria) this;
        }

        public Criteria andIsvipIsNull() {
            addCriterion("IsVip is null");
            return (Criteria) this;
        }

        public Criteria andIsvipIsNotNull() {
            addCriterion("IsVip is not null");
            return (Criteria) this;
        }

        public Criteria andIsvipEqualTo(Integer value) {
            addCriterion("IsVip =", value, "isvip");
            return (Criteria) this;
        }

        public Criteria andIsvipNotEqualTo(Integer value) {
            addCriterion("IsVip <>", value, "isvip");
            return (Criteria) this;
        }

        public Criteria andIsvipGreaterThan(Integer value) {
            addCriterion("IsVip >", value, "isvip");
            return (Criteria) this;
        }

        public Criteria andIsvipGreaterThanOrEqualTo(Integer value) {
            addCriterion("IsVip >=", value, "isvip");
            return (Criteria) this;
        }

        public Criteria andIsvipLessThan(Integer value) {
            addCriterion("IsVip <", value, "isvip");
            return (Criteria) this;
        }

        public Criteria andIsvipLessThanOrEqualTo(Integer value) {
            addCriterion("IsVip <=", value, "isvip");
            return (Criteria) this;
        }

        public Criteria andIsvipIn(List<Integer> values) {
            addCriterion("IsVip in", values, "isvip");
            return (Criteria) this;
        }

        public Criteria andIsvipNotIn(List<Integer> values) {
            addCriterion("IsVip not in", values, "isvip");
            return (Criteria) this;
        }

        public Criteria andIsvipBetween(Integer value1, Integer value2) {
            addCriterion("IsVip between", value1, value2, "isvip");
            return (Criteria) this;
        }

        public Criteria andIsvipNotBetween(Integer value1, Integer value2) {
            addCriterion("IsVip not between", value1, value2, "isvip");
            return (Criteria) this;
        }

        public Criteria andVisitlevelIsNull() {
            addCriterion("VisitLevel is null");
            return (Criteria) this;
        }

        public Criteria andVisitlevelIsNotNull() {
            addCriterion("VisitLevel is not null");
            return (Criteria) this;
        }

        public Criteria andVisitlevelEqualTo(Integer value) {
            addCriterion("VisitLevel =", value, "visitlevel");
            return (Criteria) this;
        }

        public Criteria andVisitlevelNotEqualTo(Integer value) {
            addCriterion("VisitLevel <>", value, "visitlevel");
            return (Criteria) this;
        }

        public Criteria andVisitlevelGreaterThan(Integer value) {
            addCriterion("VisitLevel >", value, "visitlevel");
            return (Criteria) this;
        }

        public Criteria andVisitlevelGreaterThanOrEqualTo(Integer value) {
            addCriterion("VisitLevel >=", value, "visitlevel");
            return (Criteria) this;
        }

        public Criteria andVisitlevelLessThan(Integer value) {
            addCriterion("VisitLevel <", value, "visitlevel");
            return (Criteria) this;
        }

        public Criteria andVisitlevelLessThanOrEqualTo(Integer value) {
            addCriterion("VisitLevel <=", value, "visitlevel");
            return (Criteria) this;
        }

        public Criteria andVisitlevelIn(List<Integer> values) {
            addCriterion("VisitLevel in", values, "visitlevel");
            return (Criteria) this;
        }

        public Criteria andVisitlevelNotIn(List<Integer> values) {
            addCriterion("VisitLevel not in", values, "visitlevel");
            return (Criteria) this;
        }

        public Criteria andVisitlevelBetween(Integer value1, Integer value2) {
            addCriterion("VisitLevel between", value1, value2, "visitlevel");
            return (Criteria) this;
        }

        public Criteria andVisitlevelNotBetween(Integer value1, Integer value2) {
            addCriterion("VisitLevel not between", value1, value2, "visitlevel");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_power
     *
     * @mbggenerated do_not_delete_during_merge Mon Oct 03 21:52:04 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_power
     *
     * @mbggenerated Mon Oct 03 21:52:04 CST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}